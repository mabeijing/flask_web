# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test():
  def setup_method(self, method):
    option = webdriver.ChromeOptions()
    option.add_argument("--headless")
    option.add_argument("--disable-gpu")
    option.add_argument("--window-size=1936, 1056")
    option.add_experimental_option('excludeSwitches', ['enable-automation'])
    path = "E:\\chromeDriver\\{version}\\chromedriver.exe".format(version="85.0.4183.83")
    self.driver = webdriver.Chrome(options=option, executable_path=path)
	# self.driver.max_window_size(1936, 1056)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_(self):
    # 货物信息
    self.driver.get("http://sit.zczy-web.zczy.com/modules/mms/system/login.html")
    
    self.driver.find_element(By.LINK_TEXT, "账号登录").click()
    self.driver.find_element(By.ID, "userName").click()
    self.driver.find_element(By.ID, "userName").send_keys("17926661153")
    self.driver.find_element(By.ID, "userPwd").click()
    self.driver.find_element(By.ID, "userPwd").send_keys("00000000")
    self.driver.find_element(By.ID, "memberLogin").click()
    self.driver.find_element(By.LINK_TEXT, "发布运单").click()
    self.driver.find_element(By.NAME, "selfComment").click()
    self.driver.find_element(By.NAME, "selfComment").send_keys("编号")
    self.driver.find_element(By.NAME, "cargoVersion").click()
    self.driver.find_element(By.NAME, "cargoVersion").send_keys("我是货物型号")
    self.driver.find_element(By.NAME, "warehouseName").click()
    self.driver.find_element(By.NAME, "warehouseName").send_keys("我是仓库名称")
    self.driver.find_element(By.NAME, "warehouseLocation").click()
    self.driver.find_element(By.NAME, "warehouseLocation").send_keys("我是仓库位置")
    self.driver.find_element(By.NAME, "orderName").click()
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(2) > .first-address").click()
    self.driver.find_element(By.ID, "cargoCategory").click()
    dropdown = self.driver.find_element(By.ID, "cargoCategory")
    dropdown.find_element(By.XPATH, "//option[. = '重货']").click()
    self.driver.find_element(By.ID, "cargoCategory").click()
    self.driver.find_element(By.NAME, "orderWeight").click()
    self.driver.find_element(By.NAME, "orderWeight").send_keys("10.555")
    self.driver.find_element(By.ID, "orderPacking1").click()
    dropdown = self.driver.find_element(By.ID, "orderPacking1")
    dropdown.find_element(By.XPATH, "//option[. = '无']").click()
    self.driver.find_element(By.ID, "orderPacking1").click()
    self.driver.find_element(By.NAME, "orderLong").click()
    self.driver.find_element(By.NAME, "orderLong").send_keys("2")
    self.driver.find_element(By.NAME, "orderWidth").click()
    self.driver.find_element(By.NAME, "orderWidth").send_keys("2")
    self.driver.find_element(By.NAME, "orderHigh").click()
    self.driver.find_element(By.NAME, "orderHigh").send_keys("2")

    # driver.execute_script('arguments[0].removeAttribute("readonly")', d);
    element = self.driver.find_element(By.ID, "cargoBlockDiv")
    self.driver.execute_script("document.documentElement.scrollTop = arguments[0].offsetTop", element)
    
    self.driver.find_element(By.ID, "vehicleTypeId").click()
    self.driver.find_element(By.CSS_SELECTOR, ".li:nth-child(2) .text").click()
    self.driver.find_element(By.CSS_SELECTOR, ".li:nth-child(2) > label > .checkbox").click()
    self.driver.find_element(By.CSS_SELECTOR, ".li:nth-child(1) > label > .checkbox").click()
    self.driver.find_element(By.CSS_SELECTOR, "#baseBlockDiv .li-row:nth-child(2)").click()
    self.driver.find_element(By.ID, "carriageLengthId").click()
    self.driver.execute_script("window.scrollTo(0,632.1739501953125)")
    self.driver.find_element(By.CSS_SELECTOR, ".li:nth-child(2) .text").click()
    self.driver.find_element(By.CSS_SELECTOR, ".li:nth-child(3) .checkbox").click()
    self.driver.find_element(By.CSS_SELECTOR, "#baseBlockDiv .li-row:nth-child(4)").click()
    self.driver.find_element(By.ID, "despatchStart").click()
    self.driver.switch_to.frame(0)
    time.sleep(2)
    self.driver.find_element(By.XPATH, "//td[@onclick='day_Click(2020,8,28);']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".tB").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > .menu:nth-child(4)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(6) > .WinvalidDay:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, ".WdateDiv").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".Wday")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".tE:nth-child(4)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".WdateDiv").click()
    self.driver.find_element(By.ID, "dpOkInput").click()
    self.driver.switch_to.default_content()
    time.sleep(2)
    self.driver.find_element(By.ID, "despatchEnd").click()
    self.driver.switch_to.frame(0)
    time.sleep(2)
    self.driver.find_element(By.XPATH, "//tr[7]/td").click()
    self.driver.find_element(By.CSS_SELECTOR, ".tE:nth-child(4)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".tB").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".hhMenu tr:nth-child(2) > .menu:nth-child(6)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(6) > .WinvalidDay:nth-child(4)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, ".WdateDiv").click()
    self.driver.find_element(By.CSS_SELECTOR, ".tE:nth-child(4)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".WdateDiv").click()
    self.driver.find_element(By.ID, "dpOkInput").click()
    self.driver.switch_to.default_content()
    time.sleep(2)
    self.driver.find_element(By.ID, "despatchEnd").send_keys("2020-08-30 11:10")
    self.driver.find_element(By.CSS_SELECTOR, "#despatchBlockDiv .row-no-margin").click()
    self.driver.find_element(By.ID, "receiptStart").click()
    self.driver.switch_to.frame(0)
    time.sleep(2)
    self.driver.find_element(By.XPATH, "//td[@onclick='day_Click(2020,8,31);']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".tB").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(4) > .menu:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.XPATH, "//tr[7]/td[2]")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, ".WdateDiv").click()
    self.driver.find_element(By.CSS_SELECTOR, ".tE:nth-child(4)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".mmMenu tr:nth-child(1) > .menu:nth-child(5)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(6) > .WinvalidDay:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, ".WdateDiv").click()
    self.driver.find_element(By.ID, "dpOkInput").click()
    self.driver.switch_to.default_content()
    
    # 重要信息
    time.sleep(2)
    element = self.driver.find_element(By.CSS_SELECTOR, "#importBlockDiv > .module-div-title > .title-text")
    self.driver.execute_script("document.documentElement.scrollTop = arguments[0].offsetTop", element)
    
    self.driver.find_element(By.ID, "cargoMoney").click()
    self.driver.find_element(By.ID, "cargoMoney").send_keys("10000")
    self.driver.find_element(By.CSS_SELECTOR, "#importBlockDiv .li-row:nth-child(4) .item-title").click()
    self.driver.find_element(By.CSS_SELECTOR, ".mr-30:nth-child(4) > .radio").click()
    self.driver.find_element(By.ID, "quote").click()
    self.driver.find_element(By.ID, "quote").send_keys("100.55")
    self.driver.find_element(By.ID, "haveBuyPolicyNot").click()
    self.driver.find_element(By.ID, "haveReceipt2").click()
    self.driver.find_element(By.ID, "receiptMoney").click()
    dropdown = self.driver.find_element(By.ID, "receiptMoney")
    dropdown.find_element(By.XPATH, "//option[. = '200']").click()
    self.driver.find_element(By.ID, "receiptMoney").click()
    
    # 是否押回单
    element = self.driver.find_element(By.XPATH, "//div[13]/span")
    self.driver.execute_script("document.documentElement.scrollTop = arguments[0].offsetTop", element)
    
    self.driver.find_element(By.LINK_TEXT, "不得混装").click()
    self.driver.find_element(By.ID, "btn3").click()
    element = self.driver.find_element(By.ID, "btn3")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.ID, "ensure1").click()
  
